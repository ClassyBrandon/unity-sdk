apply plugin: 'com.android.application'

def notifications = hasProperty('notifications')
def smartads = hasProperty('smartads')
def networks = hasProperty('networks') ? networks.split(',') : []
def network = { network ->
    if (network in networks) {
        dependencies.compile("com.deltadna.android:deltadna-smartads-provider-${network}:1.0.0-SNAPSHOT")
    }
}

buildscript {
    repositories {
        maven { url 'http://jcenter.bintray.com' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

repositories {
    mavenCentral()
    maven { url 'http://jcenter.bintray.com' }
    maven { url 'http://edinlin01:8082/artifactory/libs-snapshot-local' }
    maven { url "http://deltadna.bintray.com/android" }
}

android {
    buildToolsVersion '23.0.2'
    compileSdkVersion 23
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'

    // included as part of notifications
    if (!notifications) {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.google.android.gms', module: 'play-services-gcm'
        exclude group: 'com.google.android.gms', module: 'play-services-base'
    }
}

dependencies {
    if (notifications) {
        compile 'com.deltadna.android:deltadna-notifications:1.0.0-SNAPSHOT'
    }
    if (smartads) {
        compile 'com.deltadna.android:deltadna-smartads-core:1.0.0-SNAPSHOT'
    }

    network('adcolony')
    network('admob')
    network('amazon')
    network('chartboost')
    network('flurry')
    network('inmobi')
    network('mopub')
    network('unity')
    network('vungle')
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

task clean(type: Delete) {
    delete '../../Plugins/Android'
}

task download(type: Copy) {
    from configurations.compile
    into '../../Plugins/Android'
}
