buildscript {
    repositories {
        if (GradleVersion.current() >= GradleVersion.version("4.2")) {
            jcenter()
            google()
        } else {
            jcenter()
        }
    }
    
    dependencies {
        // use newer version of the plugin for newer unity/gradle versions
        if (GradleVersion.current() < GradleVersion.version("4.0")) {
            classpath 'com.android.tools.build:gradle:2.1.0'
        } else if (GradleVersion.current() < GradleVersion.version("4.2")) {
            classpath 'com.android.tools.build:gradle:2.3.3'
        } else {
            classpath 'com.android.tools.build:gradle:3.0.1'
        }
    }
}

apply plugin: 'android-library'

dependencies {
    if (GradleVersion.current() >= GradleVersion.version("4.2")) {
        implementation fileTree(dir: 'bin', include: ['*.jar'])
        implementation fileTree(dir: 'libs', include: ['*.jar'])
    } else {
        compile fileTree(dir: 'bin', include: ['*.jar'])
        compile fileTree(dir: 'libs', include: ['*.jar'])
    }
}

android {
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }

    compileSdkVersion **APIVERSION**
    buildToolsVersion '**BUILDTOOLS**'

    defaultConfig {
        targetSdkVersion **LIBSDKTARGET**
    }

    lintOptions {
        abortOnError false
    }
}
